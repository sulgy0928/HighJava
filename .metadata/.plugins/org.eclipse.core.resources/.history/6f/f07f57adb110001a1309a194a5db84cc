package kr.or.ddit.basic;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class T15_TableViewTest extends Application {

	@Override
	public void start(Stage primaryStage) throws Exception {
		
		// TableView에 나타낼 데이터 구성하기
		ObservableList<Member> data =
			FXCollections.observableArrayList(
				new Member("홍길동", "gildong", 22, "2222-2222", "대전"),	
				new Member("홍길서", "gilseo", 33, "3333-3333", "대구"),	
				new Member("홍길남", "gilnam", 44, "4444-4444", "광주"),	
				new Member("홍길북", "gilbook", 55, "5555-5555", "부산")	
			);
		
		BorderPane root = new BorderPane();
		
		// TableView에 데이터를 셋팅하기 => 방법1(TableView의 생성자 이용)
		TableView<Member> table = new TableView<>(data);
		
		TableColumn<Member, String> nameCol = 
				new TableColumn<>("이름");
		TableColumn<Member, String> korNameCol = 
				new TableColumn<>("한글이름");
		korNameCol.setStyle("-fx-alignment: CENTER"); // 중앙정렬
		
		// 해당 컬럼에 나타날 데이터 연결하기
		// (출력할 객체의 멤버변수와 출력할 컬럼을 매칭시킨다.)
		korNameCol.setCellValueFactory(
				new PropertyValueFactory<>("korName"));
		
		TableColumn<Member, String> engName = 
				new TableColumn<>("영어이름");
		engName.setCellValueFactory(
				new PropertyValueFactory<>("engName"));
		
		nameCol.getColumns().addAll(korNameCol, engName);
		
		TableColumn<Member, Integer> ageCol = 
				new TableColumn<>("나이"); 
		ageCol.setCellValueFactory(
				new PropertyValueFactory<>("age"));
		
		TableColumn<Member, String> telCol = 
				new TableColumn<>("전화번호"); 
		telCol.setCellValueFactory(
				new PropertyValueFactory<>("tel"));
		
		TableColumn<Member, String> addrCol = 
				new TableColumn<>("주소"); 
		addrCol.setCellValueFactory(
				new PropertyValueFactory<>("addr"));
		
		// 생성된 각 컬럼들을 TableView에 추가한다.
		table.getColumns()
			.addAll(nameCol, ageCol, telCol, addrCol);
		
		// TableView에 데이터를 셋팅하기 => 방법2 (setItems()메서드 이용)
		// table.setItems(data);
		
		//-------------------------------------------------
		GridPane grid = new GridPane();
		Text txt1 = new Text("한글이름");
		Text txt2 = new Text("영어이름");
		Text txt3 = new Text("나   이");
		Text txt4 = new Text("전화번호");
		Text txt5 = new Text("주   소");
		
		TextField txtKorName = new TextField();
		TextField txtEngName = new TextField();
		TextField txtAge = new TextField();
		TextField txtTel = new TextField();
		TextField txtAddr = new TextField();
		
		grid.add(txt1, 1, 1);
		grid.add(txt2, 2, 1);
		grid.add(txt3, 3, 1);
		grid.add(txt4, 4, 1);
		grid.add(txt5, 5, 1);
		
		grid.add(txtKorName, 1, 2);
		grid.add(txtEngName, 2, 2);
		grid.add(txtAge, 3, 2);
		grid.add(txtTel, 4, 2);
		grid.add(txtAddr, 5, 2);
		
		grid.setVgap(5);
		grid.setHgap(10);
		grid.setPadding(new Insets(10, 0, 10, 0));
		//-----------------------------------------------
		
		VBox vbox = new VBox(10);
		vbox.setPadding(new Insets(10));
		
		Button btnAdd = new Button("추가");
		btnAdd.setOnAction(e->{
			
			if(txtKorName.getText().isEmpty() 
				|| txtEngName.getText().isEmpty()	
				|| txtAge.getText().isEmpty()	
				|| txtTel.getText().isEmpty()	
				|| txtAddr.getText().isEmpty()	
					) {
				System.out.println("빈 항목이 있습니다.");
			}
			
		});
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
	
	public static void main(String[] args) {
		launch(args);
	}
	
	public class Member{
		private String korName; // 한글이름
		private String engName; // 영어이름
		private int age; 		// 나이
		private String tel;		// 전화번호
		private String addr;	// 주소
		
		public Member(String korName, String engName, int age, String tel, String addr) {
			super();
			this.korName = korName;
			this.engName = engName;
			this.age = age;
			this.tel = tel;
			this.addr = addr;
		}

		public String getKorName() {
			return korName;
		}

		public void setKorName(String korName) {
			this.korName = korName;
		}

		public String getEngName() {
			return engName;
		}

		public void setEngName(String engName) {
			this.engName = engName;
		}

		public int getAge() {
			return age;
		}

		public void setAge(int age) {
			this.age = age;
		}

		public String getTel() {
			return tel;
		}

		public void setTel(String tel) {
			this.tel = tel;
		}

		public String getAddr() {
			return addr;
		}

		public void setAddr(String addr) {
			this.addr = addr;
		}
	
		
		
		
		
	}
}
