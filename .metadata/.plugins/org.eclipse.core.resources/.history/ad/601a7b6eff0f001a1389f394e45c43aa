package kr.or.ddit.basic;

import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.control.ListView;
import javafx.scene.paint.Color;
import javafx.stage.Stage;

public class T14_ListViewTest extends Application{

	@Override
	public void start(Stage primaryStage) throws Exception {
		ListView<String> list = new ListView<>();
		
		Label label = new Label();
		label.setFont(new Font(20));
		
		//ListView 에 들어갈 데이터 구성하기
		ObservableList<String> data = 
				FXCollections.observableArrayList(
						"green","gold", "red", "blue", "black","brown","blueviolet", "pink", "yellow", "chocolate");
				
				//list.setItems(date); //ListView 에 데이터 세팅하기1
				
				//데이터세팅방법2
				
				list.getItems().addAll("green","gold", "red", "blue", "black",
				"brown","blueviolet", "pink", "yellow", "chocolate");
				
				//ListView 에 값이 선택되었을때 처리.
				list.getSelectionModel().selectedItemProperty().addListener(new ChangeListener<String>() {

					@Override
					public void changed(ObservableValue<? extends String> observable, String oldValue,
							String newValue) {
					
					label.setText(newValue);	//현재선택된값 -> newValue
												//이전 선택값 -> oldVlaue
					label.setTextFill(Color.web(newValue)); //글자색 변경.
				
					}
					
					
				});
				
		// ListView 의 내용은 변경되지 않고 화면에 보이는 부분만 변경하는 방법
				list.setCellFactory(
						new Callback<ListView<String>, ListCell<String>>(){
							
							@Override
							public ListCell<String> call(ListView<String> param){
								return new ListCell<String>() {
									protected void updateItem(String item, boolean empty) {
										super.updateItem(item, empty);
										
										//변경되는 데이터가 문자열이면 setText()사용함.
										//setText(item);
										
								Rectangle rect = new Rectangle(100, 20);
								if(item != null) {  //또는 !empty
									rect.setFill(Color.web(item)); //색칠하기
									
									Label lblTxt = new Label(item);
									lblTxt.setTextFill(Color.web(item));
									
									HBox hb2 = new HBox(10);
									hb2.getChildren().addAll(rect, lblTxt, new ImageView(new Image(
											getClass().getResourceAsStream("images/Security.png"))));
									
									setGraphic(hb2);
									
									}
									
								}
							};
								
							}
							
						});
				VBox vbox = new VBox(10);
				vbox.getChildren().addAll(list, label);
				
				Scene scene = new Scene(vbox);
				primaryStage.setTitle("ListView 연습");
				primaryStage.setScene(scene);
				primaryStage.show();
				
				}
	public static void main(String[] args) {
		launch(args);
	}
}





























